openapi: 3.0.0
info:
  title: API
  description: OpenAPI v3 powered API for Riverscout
  version: '0.5'
paths:

  ###########################
  # Device info
  ###########################
  
  /addOrUpdateDevice:
    post:
      x-swagger-router-controller: deviceInfoController
      tags:
        - Device Info
      description: Adds a new device (Sigfox/NBIoT) or if the device already exists, updates it's details
      operationId: addUpdateDevice
      responses:
        '201':
          description: Created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - displayName
                - gpsLong
                - gpsLat
                - countryCode
                - sigfoxID
                - installDate
                - replacementDate
                - reportingFreq
                - groupID
                - downlinkStatus
              properties:
                displayName:
                  type: string
                  description: "Name to display in front end"
                gpsLong:
                  type: number
                  format: double               
                  description: "GPS longitude of the gauge install location"
                gpsLat:
                  type: number
                  format: double
                  description: "GPS latitude of the gauge install location"
                countryCode:
                  type: string
                  description: "Uses the same codes as web domains. Eg: IE => Ireland"
                sigfoxID:
                  type: string
                  description: "Sigfox ID as generated by the Sigfox backend"
                installDate:
                  type: string
                  description: "Install date of device. Please use UTC format. Eg: 2018-09-09T14:00:00Z"
                replacementDate:
                  type: string
                  description: "UTC format date of the expected date the device is to be replaced"                  
                EOLDate:
                  type: string
                  description: "UTC format date of the time a device was actuallly replaced"                  
                reportingFreq:
                  type: string
                  description: "how often (in minutes) the device is expected to send up data"  
                groupIDS:
                  type: array
                  items:
                    type: string
                  description: "An array of the group IDs this device is in"
                activeStatus:
                  type: boolean
                  description: "Device active status"
                  default: true
                downlinkEnabled:
                  type: boolean
                  description: "Whether the device allows data to be sent to it or not."
                  
        description: >-
          Pushes Sigfox device data to the database with the device ID and
          timestamp. 


  /getInfoForDeviceID:
    get:
      x-swagger-router-controller: deviceInfoController
      operationId: getDeviceInfo
      tags:
        - Device Info
      description: Returns data for the specified device like it's location and group
      parameters:
        - name: deviceID
          in: query
          description: The database ID of the device to get data for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /deleteDeviceInfo:
    delete:
      x-swagger-router-controller: deviceInfoController
      operationId: deleteDeviceInfo
      tags:
        - Device Info
      description: Deletes the selected device type
      parameters:
        - name: deviceID
          in: query
          description: Database ID of the object to remove
          schema:
            type: string      
      responses:
        '200':
          description: Successful request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
                
  ###########################
  # Device Groups
  ###########################
                
  /deviceGroups:
    get:
      x-swagger-router-controller: deviceGroupController
      operationId: getDeviceGroups
      tags:
        - Device Group
      description: Returns all the device groups for the specified country code
      parameters:
        - name: countryCode
          in: query
          description: Return all groups in this country
          schema:
            type: string
      responses:
        '200':
          description: Successful request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'   
                
    
  /addOrUpdateDeviceGroup:
    post:
      x-swagger-router-controller: deviceGroupController
      tags:
        - Device Group
      description: Adds a group for devices
      operationId: addDeviceGroup
      responses:
        '201':
          description: Created new group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - groupLat
                - groupLong
                - groupName
              properties:
                groupLat:
                  type: number
                groupLong:
                  type: number
                groupName:
                  type: string
        description:
          Creates a device group with the specified parameters.
          

          
  ###########################
  # Device Types
  ###########################         
    
                
  /getAllDeviceTypes:
    get:
      x-swagger-router-controller: deviceTypeController
      operationId: getAllDeviceTypes
      tags:
        - Device Types
      description: Returns all the device types
      responses:
        '200':
          description: Successful request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'    
 
  /deleteDeviceType:
    delete:
      x-swagger-router-controller: deviceTypeController
      operationId: deleteDeviceType
      tags:
        - Device Types
      description: Deletes the selected device type
      parameters:
        - name: deviceTypeID
          in: query
          description: Database ID of the object to remove
          schema:
            type: string      
      responses:
        '200':
          description: Successful request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'   
 
 
  /addDeviceType:
    post:
      x-swagger-router-controller: deviceTypeController
      tags:
        - Device Types
      description: Adds a new / updates an exising device type
      operationId: addOrUpdateDeviceType
      responses:
        '201':
          description: Added device type
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - deviceTypeName
                - deviceTypeDescription
              properties:
                deviceTypeName:
                  type: string
                  description: The name to use for a new device type
                  minLength: 1
                  maxLength: 30
                deviceType:
                  type: string
                  description: The type of this new device
                  default: 'river'
                deviceTypeDescription:
                  type: string
                  description: Describe the device characteristics here
                  minLength: 1
                  maxLength: 250
        description:
          Adds a new device type along with it's description  
 
 
  ###########################
  # Device Readings (Sigfox)
  ########################### 
  
  
  /addSigfoxDeviceReading:
    post:
      x-swagger-router-controller: sigfoxReadingController
      tags:
        - Sigfox Device Readings
      description: Adds a reading for a Sigfox device
      operationId: addSigfoxReading
      responses:
        '201':
          description: Added reading
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - sigfoxID
                - rawHexString
                - timestamp
              properties:
                sigfoxID:
                  type: string
                  description: The Sigfox ID for a device
                rawHexString:
                  type: string
                  description: The raw hex data coming from the Sigfox backend 
                timestamp:
                  type: string
                  description: UNIX timestamp coming from the Sigfox backend
        description:
          Adds a measurement for a specific Sigfox device    
 
          
  ###########################
  # Country Info & Codes
  ########################### 
  
  /addNewCountry:
    post:
      x-swagger-router-controller: countryCodeController
      tags:
        - Country Codes and Info
      description: Adds a new 'country' with a name and a country code. If the specified country exists, it will be updated instead.
      operationId: addNewCountry
      responses:
        '201':
          description: Added country
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - countryName
                - code
              properties:
                countryName:
                  type: string
                  description: The name of this country eg 'Ireland'
                code:
                  type: string
                  description: Two character code eg; 'IE', 'FR', 'DE'
        description: >-
          Adds a new country and returns it's database ID     
          
  /getAllCountries:
    get:
      x-swagger-router-controller: countryCodeController
      operationId: getAllCountries
      tags:
        - Country Codes and Info
      description: Returns all the country IDs, names and codes.
      responses:
        '200':
          description: Successful request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'           
                
  /deleteCountry:
    delete:
      x-swagger-router-controller: countryCodeController
      operationId: deleteCountry
      tags:
        - Country Codes and Info
      description: Deletes the selected country
      parameters:
        - name: countryID
          in: query
          description: Database ID of the country to remove
          schema:
            type: string      
      responses:
        '200':
          description: Successful request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
    
             
servers:
  - url: /api
components:
  schemas:
    Success:
      properties:
        msg:
          type: string
    Error:
      properties:
        message:
          type: string
      required:
        - message
